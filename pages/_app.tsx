import ThemeConfig from '../theme'
import GlobalStyles from '../theme/globalStyles'
import ScrollToTop from '../layouts/ScrollToTop'
import { useState } from 'react'
import { styled } from '@mui/material/styles'
// css
import 'simplebar/src/simplebar.css'
import './_app.scss'
// layouts
import DashboardNavbar from '../layouts/DashboardNavbar'
import DashboardSidebar from '../layouts/DashboardSidebar'

import type { AppProps } from 'next/app'
import Head from 'next/head'

import UP, { UPAuthMessage, UPAuthResponse } from 'up-core-test'
import UPCKB from 'up-ckb-alpha-test'
import PWCore, { Address, IndexerCollector, AddressType, Amount, ChainID } from '@lay2/pw-core'
import env from '../assets/js/env'

const APP_BAR_MOBILE = 64
const APP_BAR_DESKTOP = 92

const RootStyle = styled('div')({
  display: 'flex',
  minHeight: '100%',
  overflow: 'hidden',
})

const MainStyle = styled('div')(({ theme }) => ({
  flexGrow: 1,
  overflow: 'auto',
  minHeight: '100%',
  paddingTop: APP_BAR_MOBILE + 24,
  paddingBottom: theme.spacing(10),
  paddingLeft: theme.spacing(2),
  paddingRight: theme.spacing(2),
  [theme.breakpoints.up('lg')]: {
    paddingTop: APP_BAR_DESKTOP + 24,
  },
}))

const App = ({ Component, pageProps }: AppProps) => {
  const [open, setOpen] = useState(false)
  const init = async () => {
    UP.config({
      domain: env.UNIPASS_URL,
    })
    PWCore.setChainId(Number(env.PW_CORE_CHAIN_ID))
    UPCKB.config({
      upSnapshotUrl: env.AGGREGATOR_URL + '/snapshot/',
      chainID: Number(env.PW_CORE_CHAIN_ID),
      ckbIndexerUrl: env.CKB_INDEXER_URL,
      ckbNodeUrl: env.CKB_NODE_URL,
      upLockCodeHash: env.ASSET_LOCK_CODE_HASH as string,
    })
  }
  const connect = async () => {
    const account = await UP.connect({ email: false, evmKeys: true })
    console.log('account', account)
    // this.username = account.username
    // const address: Address = UPCKB.getCKBAddress(this.username)
    // this.myAddress = address.toCKBAddress()
    // const indexerCollector = new IndexerCollector(CKB_INDEXER_URL as string)
    // const balance = await indexerCollector.getBalance(address as Address)
    // console.log('balance', balance)
    // this.myBalance = balance.toString()
  }
  init()
  return (
    <ThemeConfig>
      <Head>
        <title>UniPass BOT</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="initial-scale=1, width=device-width" />
      </Head>
      <GlobalStyles />
      <ScrollToTop />
      <RootStyle>
        <DashboardNavbar onOpenSidebar={() => setOpen(true)} />
        <DashboardSidebar isOpenSidebar={open} onCloseSidebar={() => setOpen(false)} />
        <MainStyle id="unipass-bot">
          <Component {...pageProps} />
        </MainStyle>
      </RootStyle>
    </ThemeConfig>
  )
}

export default App
